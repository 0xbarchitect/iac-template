apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "pg-client.fullname" . }}
  labels:
    {{- include "pg-client.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "pg-client.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "pg-client.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "pg-client.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          command: ["/bin/sh"]
          args:
            - "-c"
            - "while true; do sleep 30; done;"

        - name: {{ .Values.cloudSqlProxy.name }}
          image: "{{ .Values.cloudSqlProxy.image }}"
          command: ["/cloud-sql-proxy"]
          args:
            - "--structured-logs"
            - "{{ .Values.cloudSqlProxy.instanceConnectionName }}"
            - "--credentials-file=/secrets/cloudsql/service_account.json"
            - "--private-ip"
          volumeMounts:
            - name: cloudsql-credentials
              mountPath: /secrets/cloudsql
              readOnly: true
      volumes:
        - name: cloudsql-credentials
          secret:
            secretName: cloudsql-credentials
